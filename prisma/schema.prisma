datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum TransactionStatus {
  Initial
  Pending
  Success
  Rejected
  TimedOut
}

model Account {
  id                 String    @id @default(cuid())
  userId             String
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model User {
  id          String        @id @default(cuid())
  name        String        @unique
  email       String?       @unique
  password    String?
  image       String?
  balance     Float         @default(100000)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  accounts    Account[]
  sessions    Session[]
  transaction Transaction[]
}

model Transaction {
  id              String   @id @default(cuid())
  userId          String
  type            String
  QRtransactionId String?  @unique
  amount          Float
  description     String?
  receiverName    String?
  receiverAccount String?
  receiverAddress String?
  status          TransactionStatus
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  user            User     @relation(fields: [userId], references: [id])
}
